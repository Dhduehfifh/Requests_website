{
  "openapi": "3.0.0",
  "info": {
    "title": "International Student Life Hub API",
    "version": "1.0.0",
    "description": "REST API for International Student Life Hub - a platform for students to connect, trade, find housing, and organize activities"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/json/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the health status of the API service",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "boolean",
                      "example": true
                    },
                    "service": {
                      "type": "string",
                      "example": "json-api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-01-27T10:30:00Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/json/users": {
      "get": {
        "summary": "List users",
        "description": "Get a paginated list of users with optional filtering",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 20
            },
            "description": "Number of users to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of users to skip"
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["created_at", "updated_at", "id", "username", "city"],
              "default": "created_at"
            },
            "description": "Field to order by"
          },
          {
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "Sort direction"
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by city"
          },
          {
            "name": "school",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by school"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create user",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/json/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update user",
        "description": "Update an existing user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/json/posts": {
      "get": {
        "summary": "List forum posts",
        "description": "Get a paginated list of forum posts with optional filtering",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 20
            },
            "description": "Number of posts to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of posts to skip"
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["created_at", "updated_at", "id", "author_id", "status", "post_type"],
              "default": "created_at"
            },
            "description": "Field to order by"
          },
          {
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "Sort direction"
          },
          {
            "name": "post_type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["general", "market", "housing", "lfg"]
            },
            "description": "Filter by post type"
          },
          {
            "name": "author_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by author"
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by city"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["active", "closed", "deleted"]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of forum posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ForumPost"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create forum post",
        "description": "Create a new forum post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForumPostCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForumPost"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/json/posts/{id}": {
      "get": {
        "summary": "Get forum post by ID",
        "description": "Retrieve a specific forum post by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Post ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Post found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForumPost"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update forum post",
        "description": "Update an existing forum post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Post ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForumPostUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForumPost"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/json/market_listings": {
      "get": {
        "summary": "List market listings",
        "description": "Get a paginated list of market listings with optional filtering",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 20
            },
            "description": "Number of listings to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of listings to skip"
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["created_at", "updated_at", "id", "forum_post_id", "price", "category"],
              "default": "created_at"
            },
            "description": "Field to order by"
          },
          {
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "Sort direction"
          },
          {
            "name": "post_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by forum post ID"
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["electronics", "furniture", "home_appliances", "vehicles", "books", "fashion", "sports", "entertainment", "digital", "other"]
            },
            "description": "Filter by category"
          }
        ],
        "responses": {
          "200": {
            "description": "List of market listings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarketListing"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create market listing",
        "description": "Create a new market listing",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketListingCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Market listing created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketListing"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/json/conversations": {
      "get": {
        "summary": "List conversations",
        "description": "Get a paginated list of conversations",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 20
            },
            "description": "Number of conversations to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of conversations to skip"
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["created_at", "updated_at", "id", "user_a", "user_b"],
              "default": "created_at"
            },
            "description": "Field to order by"
          },
          {
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "Sort direction"
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter conversations by user (user_a or user_b)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of conversations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Conversation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create conversation",
        "description": "Create a new conversation between two users",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConversationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Conversation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/json/messages": {
      "get": {
        "summary": "List messages",
        "description": "Get a paginated list of messages with optional filtering",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 20
            },
            "description": "Number of messages to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            },
            "description": "Number of messages to skip"
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["created_at", "updated_at", "id"],
              "default": "created_at"
            },
            "description": "Field to order by"
          },
          {
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            },
            "description": "Sort direction"
          },
          {
            "name": "conv_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by conversation ID"
          },
          {
            "name": "sender_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by sender ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create message",
        "description": "Send a new message in a conversation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/json/events": {
      "get": {
        "summary": "Server-Sent Events stream",
        "description": "Subscribe to real-time events via Server-Sent Events",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "User ID to subscribe to events for"
          }
        ],
        "responses": {
          "200": {
            "description": "SSE stream",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "description": "Server-Sent Events stream with messages and prefetch events"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique user identifier"
          },
          "phone_e164": {
            "type": "string",
            "nullable": true,
            "description": "Phone number in E.164 format"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "Email address"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "nullable": true,
            "description": "Birthday in YYYY-MM-DD format"
          },
          "username": {
            "type": "string",
            "description": "Unique username"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true,
            "description": "URL to user's avatar image"
          },
          "school": {
            "type": "string",
            "nullable": true,
            "description": "School name"
          },
          "city": {
            "type": "string",
            "nullable": true,
            "description": "City name"
          },
          "language": {
            "type": "string",
            "enum": ["zh", "en"],
            "nullable": true,
            "description": "Preferred language"
          },
          "banned_until": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Ban expiration date"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": ["id", "username", "created_at", "updated_at"]
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "phone_e164": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "username": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "school": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "enum": ["zh", "en"],
            "nullable": true
          }
        },
        "required": ["username"]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "phone_e164": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "username": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "school": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "enum": ["zh", "en"],
            "nullable": true
          }
        }
      },
      "ForumPost": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "author_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "friends", "private"]
          },
          "post_type": {
            "type": "string",
            "enum": ["general", "market", "housing", "lfg"]
          },
          "status": {
            "type": "string",
            "enum": ["active", "closed", "deleted"]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": ["id", "author_id", "title", "content", "visibility", "post_type", "status", "tags", "images", "created_at", "updated_at"]
      },
      "ForumPostCreate": {
        "type": "object",
        "properties": {
          "author_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "friends", "private"]
          },
          "post_type": {
            "type": "string",
            "enum": ["general", "market", "housing", "lfg"]
          },
          "status": {
            "type": "string",
            "enum": ["active", "closed", "deleted"]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["author_id", "title", "content", "post_type"]
      },
      "ForumPostUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "friends", "private"]
          },
          "status": {
            "type": "string",
            "enum": ["active", "closed", "deleted"]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MarketListing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "forum_post_id": {
            "type": "string",
            "format": "uuid"
          },
          "category": {
            "type": "string",
            "enum": ["electronics", "furniture", "home_appliances", "vehicles", "books", "fashion", "sports", "entertainment", "digital", "other"]
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "trade_methods": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["meetup", "pickup", "delivery", "shipping"]
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "forum_post_id", "category", "price", "trade_methods", "created_at", "updated_at"]
      },
      "MarketListingCreate": {
        "type": "object",
        "properties": {
          "forum_post_id": {
            "type": "string",
            "format": "uuid"
          },
          "category": {
            "type": "string",
            "enum": ["electronics", "furniture", "home_appliances", "vehicles", "books", "fashion", "sports", "entertainment", "digital", "other"]
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "trade_methods": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["meetup", "pickup", "delivery", "shipping"]
            }
          }
        },
        "required": ["forum_post_id", "category", "price", "trade_methods"]
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_a": {
            "type": "string",
            "format": "uuid"
          },
          "user_b": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "user_a", "user_b", "created_at", "updated_at"]
      },
      "ConversationCreate": {
        "type": "object",
        "properties": {
          "user_a": {
            "type": "string",
            "format": "uuid"
          },
          "user_b": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": ["user_a", "user_b"]
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "conv_id": {
            "type": "string",
            "format": "uuid"
          },
          "sender_id": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ref_post_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "conv_id", "sender_id", "content", "images", "created_at", "updated_at"]
      },
      "MessageCreate": {
        "type": "object",
        "properties": {
          "conv_id": {
            "type": "string",
            "format": "uuid"
          },
          "sender_id": {
            "type": "string",
            "format": "uuid"
          },
          "content": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ref_post_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "required": ["conv_id", "sender_id", "content"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "integer",
            "description": "Error code"
          }
        },
        "required": ["error"]
      }
    }
  }
}
